{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Task List\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createTextVNode(_toDisplayString(task.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleCompletion(task.id)\n    }, \"Toggle Complete\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTaskTitle = $event),\n    placeholder: \"New task title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTaskTitle]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitTask && $options.submitTask(...args))\n  }, \"Add Task\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","tasks","task","key","id","_createTextVNode","_toDisplayString","name","onClick","$event","$options","toggleCompletion","_hoisted_2","deleteTask","_hoisted_3","_cache","$data","newTaskTitle","placeholder","args","submitTask"],"sources":["/home/petri/Ohjelmointi/VueJS/task-manager/src/components/TaskList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Task List</h1>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.id\">\n        {{ task.name }}\n        <button @click=\"toggleCompletion(task.id)\">Toggle Complete</button>\n        <button @click=\"deleteTask(task.id)\">Delete</button>\n      </li>\n    </ul>\n    <input v-model=\"newTaskTitle\" placeholder=\"New task title\" />\n    <button @click=\"submitTask\">Add Task</button>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'TaskList',\n  data() {\n    return {\n      newTaskTitle: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['tasks'])\n  },\n  methods: {\n    ...mapActions(['addTask', 'deleteTask', 'toggleTaskCompletion']),\n    submitTask() {\n      if (this.newTaskTitle) {\n        this.addTask({ name: this.newTaskTitle, completed: false });\n        this.newTaskTitle = '';\n      }\n    },\n    toggleCompletion(taskId) {\n      this.toggleTaskCompletion(taskId);\n    },\n    deleteTask(taskId) {\n      this.$store.dispatch('deleteTask', taskId);\n    }\n  },\n  created() {\n    this.$store.dispatch('fetchTasks');\n  }\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAkB,YAAd,WAAS;mBAFjB;mBAAA;;uBACEC,mBAAA,CAWM,cAVJC,UAAkB,EAClBF,mBAAA,CAMK,c,kBALHC,mBAAA,CAIKE,SAAA,QARXC,WAAA,CAIyBC,IAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAIK;MAJsBO,GAAG,EAAED,IAAI,CAACE;QAJ3CC,gBAAA,CAAAC,gBAAA,CAKWJ,IAAI,CAACK,IAAI,IAAG,GACf,iBAAAZ,mBAAA,CAAmE;MAA1Da,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACT,IAAI,CAACE,EAAE;OAAG,iBAAe,iBANlEQ,UAAA,GAOQjB,mBAAA,CAAoD;MAA3Ca,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,UAAU,CAACX,IAAI,CAACE,EAAE;OAAG,QAAM,iBAPnDU,UAAA,E;oDAUInB,mBAAA,CAA6D;IAVjE,uBAAAoB,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAUoBO,KAAA,CAAAC,YAAY,GAAAR,MAAA;IAAES,WAAW,EAAC;iDAA1BF,KAAA,CAAAC,YAAY,E,GAC5BtB,mBAAA,CAA6C;IAApCa,OAAK,EAAAO,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAET,QAAA,CAAAU,UAAA,IAAAV,QAAA,CAAAU,UAAA,IAAAD,IAAA,CAAU;KAAE,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}