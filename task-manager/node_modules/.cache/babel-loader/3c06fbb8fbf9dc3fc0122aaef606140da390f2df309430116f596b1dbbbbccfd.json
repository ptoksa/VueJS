{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Edit Task\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return $options.task ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.task.title = $event),\n    placeholder: \"Task Title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $options.task.title]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.editTask($options.task))\n  }, \"Save\"), _createVNode(_component_router_link, {\n    to: \"/tasks\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Back to Task List\")]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","_createElementVNode","$options","task","_createElementBlock","_hoisted_1","_hoisted_2","_cache","$event","title","placeholder","onClick","_ctx","editTask","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_createCommentVNode"],"sources":["/home/petri/Ohjelmointi/VueJS/task-manager/src/components/TaskDetails.vue"],"sourcesContent":["<!-- src/components/TaskDetails.vue -->\n<template>\n  <div v-if=\"task\">\n    <h1>Edit Task</h1>\n    <input v-model=\"task.title\" placeholder=\"Task Title\" />\n    <button @click=\"editTask(task)\">Save</button>\n    <router-link to=\"/tasks\">Back to Task List</router-link>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  props: ['id'],\n  computed: {\n    task() {\n      return this.getTaskById(parseInt(this.id));\n    },\n    ...mapGetters(['getTaskById'])\n  },\n  methods: {\n    ...mapActions(['editTask'])\n  }\n};\n</script>\n"],"mappings":";;EAAAA,GAAA;AAAA;gCAGIC,mBAAA,CAAkB,YAAd,WAAS;;;SADJC,QAAA,CAAAC,IAAI,I,cAAfC,mBAAA,CAKM,OAPRC,UAAA,GAGIC,UAAkB,E,gBAClBL,mBAAA,CAAuD;IAJ3D,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoBN,QAAA,CAAAC,IAAI,CAACM,KAAK,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAxBR,QAAA,CAAAC,IAAI,CAACM,KAAK,E,GAC1BR,mBAAA,CAA6C;IAApCU,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,IAAA,CAAAC,QAAQ,CAACX,QAAA,CAAAC,IAAI;KAAG,MAAI,GACpCW,YAAA,CAAwDC,sBAAA;IAA3CC,EAAE,EAAC;EAAQ;IAN5BC,OAAA,EAAAC,QAAA,CAM6B,MAAiB,CAN9CC,gBAAA,CAM6B,mBAAiB,E;IAN9CC,CAAA;UAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}