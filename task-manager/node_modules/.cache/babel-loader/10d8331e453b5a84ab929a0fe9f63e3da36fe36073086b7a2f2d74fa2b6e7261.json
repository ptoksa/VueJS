{"ast":null,"code":"// src/store/index.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    tasks: []\n  },\n  mutations: {\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    }\n  },\n  actions: {\n    fetchTasks({\n      commit\n    }) {\n      // Simulating fetching tasks from an API\n      const tasks = [{\n        id: 1,\n        name: 'Task 1',\n        completed: false\n      }, {\n        id: 2,\n        name: 'Task 2',\n        completed: true\n      }];\n      commit('setTasks', tasks);\n    }\n  },\n  getters: {\n    allTasks: state => state.tasks\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","tasks","mutations","setTasks","actions","fetchTasks","commit","id","name","completed","getters","allTasks","modules"],"sources":["/home/petri/Ohjelmointi/VueJS/task-manager/src/store/index.js"],"sourcesContent":["// src/store/index.js\nimport { createStore } from 'vuex';\n\nexport default createStore({\n  state: {\n    tasks: [],\n  },\n  mutations: {\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n  },\n  actions: {\n    fetchTasks({ commit }) {\n      // Simulating fetching tasks from an API\n      const tasks = [\n        { id: 1, name: 'Task 1', completed: false },\n        { id: 2, name: 'Task 2', completed: true },\n      ];\n      commit('setTasks', tasks);\n    },\n  },\n  getters: {\n    allTasks: state => state.tasks,\n  },\n  modules: {},\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACH,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACrB;MACA,MAAML,KAAK,GAAG,CACZ;QAAEM,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAC,EAC3C;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAK,CAAC,CAC3C;MACDH,MAAM,CAAC,UAAU,EAAEL,KAAK,CAAC;IAC3B;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,QAAQ,EAAEX,KAAK,IAAIA,KAAK,CAACC;EAC3B,CAAC;EACDW,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}